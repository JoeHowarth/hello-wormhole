/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockWormholeRelayer,
  MockWormholeRelayerInterface,
} from "../MockWormholeRelayer";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "NotAnEvmAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "targetChain",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "receiverValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
    ],
    name: "forwardPayloadToEvm",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "whFormatAddress",
        type: "bytes32",
      },
    ],
    name: "fromWormholeFormat",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pendingDeliveries",
    outputs: [
      {
        internalType: "uint16",
        name: "targetChain",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "receiverValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "sourceAddress",
        type: "bytes32",
      },
      {
        internalType: "uint16",
        name: "sourceChain",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "deliveryHash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "performRecordedDeliveries",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "performRecordedDeliveryFiFo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "receiverValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
    ],
    name: "quoteEVMDeliveryPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "nativePriceQuote",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "targetChainRefundPerGasUnused",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "targetChain",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "receiverValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
    ],
    name: "sendPayloadToEvm",
    outputs: [
      {
        internalType: "uint64",
        name: "sequence",
        type: "uint64",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "sequence_",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "toWormholeFormat",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600080546001600160401b031916905534801561002057600080fd5b50611638806100306000396000f3fe6080604052600436106100955760003560e01c8063af24c7b011610059578063af24c7b014610164578063c23ee3c314610199578063caa112f9146101ce578063e17563df146101e3578063f0dbf02f1461021b57600080fd5b80632a8d7973146100a15780634533e5ff146100e057806369346942146100f55780638fecdd02146101295780639a8a05921461013c57600080fd5b3661009c57005b600080fd5b3480156100ad57600080fd5b506000546100c29067ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020015b60405180910390f35b6100f36100ee366004610f26565b610230565b005b34801561010157600080fd5b5061011561011036600461100a565b610245565b6040516100d7989796959493929190611069565b6100c2610137366004610f26565b610339565b34801561014857600080fd5b50610151600481565b60405161ffff90911681526020016100d7565b34801561017057600080fd5b5061018b61017f3660046110c2565b6001600160a01b031690565b6040519081526020016100d7565b3480156101a557600080fd5b506101b96101b43660046110e4565b610576565b604080519283526020830191909152016100d7565b3480156101da57600080fd5b506100f36105b3565b3480156101ef57600080fd5b506102036101fe36600461100a565b610871565b6040516001600160a01b0390911681526020016100d7565b34801561022757600080fd5b506100f36108a1565b61023d8585858585610339565b505050505050565b6001818154811061025557600080fd5b6000918252602090912060089091020180546001820154600283015460038401805461ffff85169650620100009094046001600160a01b031694929391929161029d90611117565b80601f01602080910402602001604051908101604052809291908181526020018280546102c990611117565b80156103165780601f106102eb57610100808354040283529160200191610316565b820191906000526020600020905b8154815290600101906020018083116102f957829003601f168201915b50505050600583015460068401546007909401549293909261ffff909116915088565b600060016040518061012001604052808861ffff168152602001876001600160a01b03168152602001858152602001848152602001868152602001600067ffffffffffffffff81111561038e5761038e610f10565b6040519080825280602002602001820160405280156103c157816020015b60608152602001906001900390816103ac5790505b5081526020013381526004602080830191909152600060409283018190528454600181810187559582529082902084516008909202018054928501516001600160a01b031662010000026001600160b01b031990931661ffff929092169190911791909117815590820151928101929092556060810151600283015560808101519091906003820190610454908261119c565b5060a08201518051610470916004840191602090910190610d35565b5060c0820151600582015560e082015160068201805461ffff191661ffff90921691909117905561010090910151600790910155600180546104b3908290611272565b815481106104c3576104c361128b565b90600052602060002090600802016040516020016104e19190611374565b60408051601f19818403018152919052805160209091012060018054610508908290611272565b815481106105185761051861128b565b60009182526020822060076008909202010191909155805467ffffffffffffffff1690806105458361141f565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550905095945050505050565b60008061058883640ba43b7400611446565b61059985662386f26fc1000061145d565b6105a3919061145d565b95640ba43b740095509350505050565b60005b600154811015610862576000600182815481106105d5576105d561128b565b600091825260209182902060408051610120810182526008909302909101805461ffff811684526001600160a01b036201000090910416938301939093526001830154908201526002820154606082015260038201805491929160808401919061063e90611117565b80601f016020809104026020016040519081016040528092919081815260200182805461066a90611117565b80156106b75780601f1061068c576101008083540402835291602001916106b7565b820191906000526020600020905b81548152906001019060200180831161069a57829003601f168201915b5050505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561079157838290600052602060002001805461070490611117565b80601f016020809104026020016040519081016040528092919081815260200182805461073090611117565b801561077d5780601f106107525761010080835404028352916020019161077d565b820191906000526020600020905b81548152906001019060200180831161076057829003601f168201915b5050505050815260200190600101906106e5565b505050908252506005820154602080830191909152600683015461ffff166040808401919091526007909301546060928301528301518383015191840151608085015160a086015160c087015160e0880151610100890151975163294ee51960e11b81529899506001600160a01b039095169763529dca329794969561081b959091600401611470565b6000604051808303818589803b15801561083457600080fd5b5088f1158015610848573d6000803e3d6000fd5b50505050505050808061085a906114f8565b9150506105b6565b5061086f60016000610d87565b565b600060a082901c1561089d5760405163033b960d60e41b81526004810183905260240160405180910390fd5b5090565b600060016000815481106108b7576108b761128b565b600091825260209182902060408051610120810182526008909302909101805461ffff811684526001600160a01b036201000090910416938301939093526001830154908201526002820154606082015260038201805491929160808401919061092090611117565b80601f016020809104026020016040519081016040528092919081815260200182805461094c90611117565b80156109995780601f1061096e57610100808354040283529160200191610999565b820191906000526020600020905b81548152906001019060200180831161097c57829003601f168201915b5050505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610a735783829060005260206000200180546109e690611117565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1290611117565b8015610a5f5780601f10610a3457610100808354040283529160200191610a5f565b820191906000526020600020905b815481529060010190602001808311610a4257829003601f168201915b5050505050815260200190600101906109c7565b505050908252506005820154602080830191909152600683015461ffff16604080840191909152600790930154606090920191909152820151608083015160a084015160c085015160e0860151610100870151955163294ee51960e11b81529697506001600160a01b039094169563529dca3295610af49591600401611470565b600060405180830381600087803b158015610b0e57600080fd5b505af1158015610b22573d6000803e3d6000fd5b505050506001600081548110610b3a57610b3a61128b565b60009182526020822060089091020180546001600160b01b0319168155600181018290556002810182905590610b736003830182610dab565b610b81600483016000610de5565b5060006005820181905560068201805461ffff1916905560079091015560015b600154811015610cb45760018181548110610bbe57610bbe61128b565b906000526020600020906008020160018083610bda9190611272565b81548110610bea57610bea61128b565b600091825260209091208254600890920201805461ffff90921661ffff1983168117825583546001600160b01b03199093161762010000928390046001600160a01b03169092029190911781556001808301549082015560028083015490820155600380820190610c5d90840182611511565b5060048281018054610c729284019190610e03565b5060058281015490820155600680830154908201805461ffff191661ffff90921691909117905560079182015491015580610cac816114f8565b915050610ba1565b506001805480610cc657610cc66115ec565b60008281526020812060086000199093019283020180546001600160b01b0319168155600181018290556002810182905590610d056003830182610dab565b610d13600483016000610de5565b5060006005820181905560068201805461ffff19169055600790910155905550565b828054828255906000526020600020908101928215610d7b579160200282015b82811115610d7b5782518290610d6b908261119c565b5091602001919060010190610d55565b5061089d929150610e4b565b5080546000825560080290600052602060002090810190610da89190610e68565b50565b508054610db790611117565b6000825580601f10610dc7575050565b601f016020900490600052602060002090810190610da89190610ecd565b5080546000825590600052602060002090810190610da89190610e4b565b828054828255906000526020600020908101928215610d7b5760005260206000209182015b82811115610d7b5781610e3b8482611511565b5091600101919060010190610e28565b8082111561089d576000610e5f8282610dab565b50600101610e4b565b8082111561089d5780546001600160b01b031916815560006001820181905560028201819055610e9b6003830182610dab565b610ea9600483016000610de5565b5060006005820181905560068201805461ffff191690556007820155600801610e68565b5b8082111561089d5760008155600101610ece565b803561ffff81168114610ef457600080fd5b919050565b80356001600160a01b0381168114610ef457600080fd5b634e487b7160e01b600052604160045260246000fd5b600080600080600060a08688031215610f3e57600080fd5b610f4786610ee2565b9450610f5560208701610ef9565b9350604086013567ffffffffffffffff80821115610f7257600080fd5b818801915088601f830112610f8657600080fd5b813581811115610f9857610f98610f10565b604051601f8201601f19908116603f01168101908382118183101715610fc057610fc0610f10565b816040528281528b6020848701011115610fd957600080fd5b8260208601602083013760009281016020019290925250969995985095966060810135965060800135949350505050565b60006020828403121561101c57600080fd5b5035919050565b6000815180845260005b818110156110495760208185018101518683018201520161102d565b506000602082860101526020601f19601f83011685010191505092915050565b600061010061ffff808c16845260018060a01b038b1660208501528960408501528860608501528160808501526110a282850189611023565b60a08501979097529490941660c08301525060e001525095945050505050565b6000602082840312156110d457600080fd5b6110dd82610ef9565b9392505050565b6000806000606084860312156110f957600080fd5b61110284610ee2565b95602085013595506040909401359392505050565b600181811c9082168061112b57607f821691505b60208210810361114b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561119757600081815260208120601f850160051c810160208610156111785750805b601f850160051c820191505b8181101561023d57828155600101611184565b505050565b815167ffffffffffffffff8111156111b6576111b6610f10565b6111ca816111c48454611117565b84611151565b602080601f8311600181146111ff57600084156111e75750858301515b600019600386901b1c1916600185901b17855561023d565b600085815260208120601f198616915b8281101561122e5788860151825594840194600190910190840161120f565b508582101561124c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b818103818111156112855761128561125c565b92915050565b634e487b7160e01b600052603260045260246000fd5b600081546112ae81611117565b8085526020600183811680156112cb57600181146112e557611313565b60ff1985168884015283151560051b880183019550611313565b866000528260002060005b8581101561130b5781548a82018601529083019084016112f0565b890184019650505b505050505092915050565b6000815480845260208085019450848260051b8601856000528260002060005b8581101561136757838303895261135583836112a1565b9885019892506001918201910161133e565b5090979650505050505050565b60208152600082546113906020840161ffff831661ffff169052565b60101c6001600160a01b03166040830152600183015460608301526002830154608083015261012060a083018190526113d06101408401600386016112a1565b838103601f190160c08501526113e9816004870161131e565b9050600585015460e0850152611404600686015461ffff1690565b61ffff16610100850152600794909401549201919091525090565b600067ffffffffffffffff80831681810361143c5761143c61125c565b6001019392505050565b80820281158282048414176112855761128561125c565b808201808211156112855761128561125c565b60a08152600061148360a0830188611023565b6020838203818501528188518084528284019150828160051b850101838b0160005b838110156114d357601f198784030185526114c1838351611023565b948601949250908501906001016114a5565b505060408701999099525050505061ffff939093166060820152608001525092915050565b60006001820161150a5761150a61125c565b5060010190565b81810361151c575050565b6115268254611117565b67ffffffffffffffff81111561153e5761153e610f10565b61154c816111c48454611117565b6000601f82116001811461158057600083156115685750848201545b600019600385901b1c1916600184901b1784556115e5565b600085815260209020601f19841690600086815260209020845b838110156115ba578286015482556001958601959091019060200161159a565b50858310156115d85781850154600019600388901b60f8161c191681555b50505060018360011b0184555b5050505050565b634e487b7160e01b600052603160045260246000fdfea264697066735822122033f324c29d452bd695c50fab2cdf9e2d8a8e665dc53693f6d623542c9980034864736f6c63430008130033";

type MockWormholeRelayerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockWormholeRelayerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockWormholeRelayer__factory extends ContractFactory {
  constructor(...args: MockWormholeRelayerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<MockWormholeRelayer> {
    return super.deploy(overrides || {}) as Promise<MockWormholeRelayer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockWormholeRelayer {
    return super.attach(address) as MockWormholeRelayer;
  }
  override connect(signer: Signer): MockWormholeRelayer__factory {
    return super.connect(signer) as MockWormholeRelayer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockWormholeRelayerInterface {
    return new utils.Interface(_abi) as MockWormholeRelayerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockWormholeRelayer {
    return new Contract(address, _abi, signerOrProvider) as MockWormholeRelayer;
  }
}
