/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { HelloWormhole, HelloWormholeInterface } from "../HelloWormhole";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_wormholeRelayer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "NotAnEvmAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "greeting",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "senderChain",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "GreetingReceived",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "greetings",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "targetChain",
        type: "uint16",
      },
    ],
    name: "quoteGreeting",
    outputs: [
      {
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "sourceAddress",
        type: "bytes32",
      },
      {
        internalType: "uint16",
        name: "sourceChain",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "receiveWormholeMessages",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "targetChain",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "greeting",
        type: "string",
      },
    ],
    name: "sendGreeting",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "wormholeRelayer",
    outputs: [
      {
        internalType: "contract IWormholeRelayer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610be1380380610be183398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051610b4261009f6000396000818160bc015281816101f1015281816102b901526103300152610b426000f3fe60806040526004361061004a5760003560e01c8063529dca321461004f57806365c4459814610064578063bd9c52d914610097578063da25b725146100aa578063f87c9ea9146100f6575b600080fd5b61006261005d366004610642565b610123565b005b34801561007057600080fd5b5061008461007f36600461074b565b6101c6565b6040519081526020015b60405180910390f35b6100626100a5366004610766565b61026a565b3480156100b657600080fd5b506100de7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161008e565b34801561010257600080fd5b506101166101113660046107e6565b61047f565b60405161008e919061084f565b600061012e8461052b565b90506000868060200190518101906101469190610862565b90507f5c4ab0cfb98525b63324629eb8c98352dec2bece203410170311b7840505467681858460405161017b939291906108d9565b60405180910390a1600080546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563016101bc8282610995565b5050505050505050565b60405163c23ee3c360e01b815261ffff8216600482015260006024820181905261c3506044830152907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c23ee3c3906064016040805180830381865afa15801561023f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102639190610a55565b5092915050565b60008160405160200161027d919061084f565b60408051808303601f190181529082905263c23ee3c360e01b825261ffff8616600483015260006024830181905261c3506044840152909250907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c23ee3c3906064016040805180830381865afa158015610307573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032b9190610a55565b5090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638fecdd0282878786600061c3506040518763ffffffff1660e01b8152600401610386959493929190610a79565b60206040518083038185885af11580156103a4573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906103c99190610abb565b5080341115610478576000336103df8334610ae5565b604051600081818185875af1925050503d806000811461041b576040519150601f19603f3d011682016040523d82523d6000602084013e610420565b606091505b50509050806104765760405162461bcd60e51b815260206004820152601d60248201527f52657475726e696e67206578636573732066756e6473206661696c656400000060448201526064015b60405180910390fd5b505b5050505050565b6000818154811061048f57600080fd5b9060005260206000200160009150905080546104aa90610910565b80601f01602080910402602001604051908101604052809291908181526020018280546104d690610910565b80156105235780601f106104f857610100808354040283529160200191610523565b820191906000526020600020905b81548152906001019060200180831161050657829003601f168201915b505050505081565b600060a082901c156105535760405163033b960d60e41b81526004810183905260240161046d565b5090565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561059657610596610557565b604052919050565b600067ffffffffffffffff8211156105b8576105b8610557565b50601f01601f191660200190565b60006105d96105d48461059e565b61056d565b90508281528383830111156105ed57600080fd5b828260208301376000602084830101529392505050565b600082601f83011261061557600080fd5b610624838335602085016105c6565b9392505050565b803561ffff8116811461063d57600080fd5b919050565b600080600080600060a0868803121561065a57600080fd5b853567ffffffffffffffff8082111561067257600080fd5b61067e89838a01610604565b965060209150818801358181111561069557600080fd5b8801601f81018a136106a657600080fd5b8035828111156106b8576106b8610557565b8060051b6106c785820161056d565b918252828101850191858101908d8411156106e157600080fd5b86850192505b8383101561071d578235868111156106ff5760008081fd5b61070d8f8983890101610604565b83525091860191908601906106e7565b809a50505050505050506040860135925061073a6060870161062b565b949793965091946080013592915050565b60006020828403121561075d57600080fd5b6106248261062b565b60008060006060848603121561077b57600080fd5b6107848461062b565b925060208401356001600160a01b03811681146107a057600080fd5b9150604084013567ffffffffffffffff8111156107bc57600080fd5b8401601f810186136107cd57600080fd5b6107dc868235602084016105c6565b9150509250925092565b6000602082840312156107f857600080fd5b5035919050565b60005b8381101561081a578181015183820152602001610802565b50506000910152565b6000815180845261083b8160208601602086016107ff565b601f01601f19169290920160200192915050565b6020815260006106246020830184610823565b60006020828403121561087457600080fd5b815167ffffffffffffffff81111561088b57600080fd5b8201601f8101841361089c57600080fd5b80516108aa6105d48261059e565b8181528560208385010111156108bf57600080fd5b6108d08260208301602086016107ff565b95945050505050565b6060815260006108ec6060830186610823565b61ffff949094166020830152506001600160a01b0391909116604090910152919050565b600181811c9082168061092457607f821691505b60208210810361094457634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561099057600081815260208120601f850160051c810160208610156109715750805b601f850160051c820191505b818110156104765782815560010161097d565b505050565b815167ffffffffffffffff8111156109af576109af610557565b6109c3816109bd8454610910565b8461094a565b602080601f8311600181146109f857600084156109e05750858301515b600019600386901b1c1916600185901b178555610476565b600085815260208120601f198616915b82811015610a2757888601518255948401946001909101908401610a08565b5085821015610a455787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008060408385031215610a6857600080fd5b505080516020909101519092909150565b61ffff861681526001600160a01b038516602082015260a060408201819052600090610aa790830186610823565b606083019490945250608001529392505050565b600060208284031215610acd57600080fd5b815167ffffffffffffffff8116811461062457600080fd5b81810381811115610b0657634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212206dcdf007d21a4261d2dd435516cb2e2b70cd90627a9446764f668128619a23b664736f6c63430008130033";

type HelloWormholeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HelloWormholeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HelloWormhole__factory extends ContractFactory {
  constructor(...args: HelloWormholeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _wormholeRelayer: string,
    overrides?: Overrides & { from?: string }
  ): Promise<HelloWormhole> {
    return super.deploy(
      _wormholeRelayer,
      overrides || {}
    ) as Promise<HelloWormhole>;
  }
  override getDeployTransaction(
    _wormholeRelayer: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_wormholeRelayer, overrides || {});
  }
  override attach(address: string): HelloWormhole {
    return super.attach(address) as HelloWormhole;
  }
  override connect(signer: Signer): HelloWormhole__factory {
    return super.connect(signer) as HelloWormhole__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HelloWormholeInterface {
    return new utils.Interface(_abi) as HelloWormholeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HelloWormhole {
    return new Contract(address, _abi, signerOrProvider) as HelloWormhole;
  }
}
