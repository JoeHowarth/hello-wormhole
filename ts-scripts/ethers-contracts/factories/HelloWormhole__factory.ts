/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { HelloWormhole, HelloWormholeInterface } from "../HelloWormhole";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_wormholeRelayer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "NotAnEvmAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "greeting",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "senderChain",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "GreetingReceived",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "greetings",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "targetChain",
        type: "uint16",
      },
    ],
    name: "quoteCrossChainGreeting",
    outputs: [
      {
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "sourceAddress",
        type: "bytes32",
      },
      {
        internalType: "uint16",
        name: "sourceChain",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "receiveWormholeMessages",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "targetChain",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "greeting",
        type: "string",
      },
    ],
    name: "sendCrossChainGreeting",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "wormholeRelayer",
    outputs: [
      {
        internalType: "contract IWormholeRelayer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610c06380380610c0683398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051610b6761009f6000396000818160bc015281816101870152818161031a015261039e0152610b676000f3fe60806040526004361061004a5760003560e01c80630f4b629a1461004f57806328bd75ce14610064578063529dca3214610097578063da25b725146100aa578063f87c9ea9146100f6575b600080fd5b61006261005d36600461063c565b610123565b005b34801561007057600080fd5b5061008461007f3660046106bc565b6102ef565b6040519081526020015b60405180910390f35b6100626100a53660046106fe565b610393565b3480156100b657600080fd5b506100de7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161008e565b34801561010257600080fd5b50610116610111366004610807565b6104a0565b60405161008e9190610870565b600061012e846102ef565b9050803410156101855760405162461bcd60e51b815260206004820152601c60248201527f4e6f7420656e6f7567682076616c756520776173207061737365642e0000000060448201526064015b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638fecdd02828686866040516020016101c89190610870565b604051602081830303815290604052600061c3506040518763ffffffff1660e01b81526004016101fc959493929190610883565b60206040518083038185885af115801561021a573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061023f91906108c5565b50803411156102e95760003361025583346108ef565b604051600081818185875af1925050503d8060008114610291576040519150601f19603f3d011682016040523d82523d6000602084013e610296565b606091505b50509050806102e75760405162461bcd60e51b815260206004820152601d60248201527f52657475726e696e67206578636573732066756e6473206661696c6564000000604482015260640161017c565b505b50505050565b60405163c23ee3c360e01b815261ffff8216600482015260006024820181905261c3506044830152907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c23ee3c3906064016040805180830381865afa158015610368573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038c9190610916565b5092915050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104025760405162461bcd60e51b815260206004820152601460248201527313db9b1e481c995b185e595c88185b1b1bddd95960621b604482015260640161017c565b600085806020019051810190610418919061093a565b600080546001810182559080529091507f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563016104548282610a3a565b507f5c4ab0cfb98525b63324629eb8c98352dec2bece203410170311b7840505467681846104818761054c565b60405161049093929190610afa565b60405180910390a1505050505050565b600081815481106104b057600080fd5b9060005260206000200160009150905080546104cb906109b1565b80601f01602080910402602001604051908101604052809291908181526020018280546104f7906109b1565b80156105445780601f1061051957610100808354040283529160200191610544565b820191906000526020600020905b81548152906001019060200180831161052757829003601f168201915b505050505081565b600060a082901c156105745760405163033b960d60e41b81526004810183905260240161017c565b5090565b803561ffff8116811461058a57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156105ce576105ce61058f565b604052919050565b600067ffffffffffffffff8211156105f0576105f061058f565b50601f01601f191660200190565b600061061161060c846105d6565b6105a5565b905082815283838301111561062557600080fd5b828260208301376000602084830101529392505050565b60008060006060848603121561065157600080fd5b61065a84610578565b925060208401356001600160a01b038116811461067657600080fd5b9150604084013567ffffffffffffffff81111561069257600080fd5b8401601f810186136106a357600080fd5b6106b2868235602084016105fe565b9150509250925092565b6000602082840312156106ce57600080fd5b6106d782610578565b9392505050565b600082601f8301126106ef57600080fd5b6106d7838335602085016105fe565b600080600080600060a0868803121561071657600080fd5b853567ffffffffffffffff8082111561072e57600080fd5b61073a89838a016106de565b965060209150818801358181111561075157600080fd5b8801601f81018a1361076257600080fd5b8035828111156107745761077461058f565b8060051b6107838582016105a5565b918252828101850191858101908d84111561079d57600080fd5b86850192505b838310156107d9578235868111156107bb5760008081fd5b6107c98f89838901016106de565b83525091860191908601906107a3565b809a5050505050505050604086013592506107f660608701610578565b949793965091946080013592915050565b60006020828403121561081957600080fd5b5035919050565b60005b8381101561083b578181015183820152602001610823565b50506000910152565b6000815180845261085c816020860160208601610820565b601f01601f19169290920160200192915050565b6020815260006106d76020830184610844565b61ffff861681526001600160a01b038516602082015260a0604082018190526000906108b190830186610844565b606083019490945250608001529392505050565b6000602082840312156108d757600080fd5b815167ffffffffffffffff811681146106d757600080fd5b8181038181111561091057634e487b7160e01b600052601160045260246000fd5b92915050565b6000806040838503121561092957600080fd5b505080516020909101519092909150565b60006020828403121561094c57600080fd5b815167ffffffffffffffff81111561096357600080fd5b8201601f8101841361097457600080fd5b805161098261060c826105d6565b81815285602083850101111561099757600080fd5b6109a8826020830160208601610820565b95945050505050565b600181811c908216806109c557607f821691505b6020821081036109e557634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610a3557600081815260208120601f850160051c81016020861015610a125750805b601f850160051c820191505b81811015610a3157828155600101610a1e565b5050505b505050565b815167ffffffffffffffff811115610a5457610a5461058f565b610a6881610a6284546109b1565b846109eb565b602080601f831160018114610a9d5760008415610a855750858301515b600019600386901b1c1916600185901b178555610a31565b600085815260208120601f198616915b82811015610acc57888601518255948401946001909101908401610aad565b5085821015610aea5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b606081526000610b0d6060830186610844565b61ffff949094166020830152506001600160a01b039190911660409091015291905056fea26469706673582212200b5696f52cda3f414c85329f8109cf55f6d8b413cafdab5150b704a5fff244df64736f6c63430008130033";

type HelloWormholeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HelloWormholeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HelloWormhole__factory extends ContractFactory {
  constructor(...args: HelloWormholeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _wormholeRelayer: string,
    overrides?: Overrides & { from?: string }
  ): Promise<HelloWormhole> {
    return super.deploy(
      _wormholeRelayer,
      overrides || {}
    ) as Promise<HelloWormhole>;
  }
  override getDeployTransaction(
    _wormholeRelayer: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_wormholeRelayer, overrides || {});
  }
  override attach(address: string): HelloWormhole {
    return super.attach(address) as HelloWormhole;
  }
  override connect(signer: Signer): HelloWormhole__factory {
    return super.connect(signer) as HelloWormhole__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HelloWormholeInterface {
    return new utils.Interface(_abi) as HelloWormholeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HelloWormhole {
    return new Contract(address, _abi, signerOrProvider) as HelloWormhole;
  }
}
