/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WormholeSimulator,
  WormholeSimulatorInterface,
} from "../WormholeSimulator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "wormhole_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "devnetGuardian",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "version",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "timestamp",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "nonce",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "emitterChainId",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "emitterAddress",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sequence",
            type: "uint64",
          },
          {
            internalType: "uint8",
            name: "consistencyLevel",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
          {
            internalType: "uint32",
            name: "guardianSetIndex",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "guardianIndex",
                type: "uint8",
              },
            ],
            internalType: "struct IWormhole.Signature[]",
            name: "signatures",
            type: "tuple[]",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct IWormhole.VM",
        name: "vm_",
        type: "tuple",
      },
    ],
    name: "encodeAndSignMessage",
    outputs: [
      {
        internalType: "bytes",
        name: "signedMessage",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "version",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "timestamp",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "nonce",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "emitterChainId",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "emitterAddress",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sequence",
            type: "uint64",
          },
          {
            internalType: "uint8",
            name: "consistencyLevel",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
          {
            internalType: "uint32",
            name: "guardianSetIndex",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "guardianIndex",
                type: "uint8",
              },
            ],
            internalType: "struct IWormhole.Signature[]",
            name: "signatures",
            type: "tuple[]",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct IWormhole.VM",
        name: "vm_",
        type: "tuple",
      },
    ],
    name: "encodeObservation",
    outputs: [
      {
        internalType: "bytes",
        name: "encodedObservation",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32[]",
            name: "topics",
            type: "bytes32[]",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "emitter",
            type: "address",
          },
        ],
        internalType: "struct VmSafe.Log[]",
        name: "logs",
        type: "tuple[]",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
      {
        internalType: "uint16",
        name: "emitterChainId",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "emitterAddress",
        type: "address",
      },
    ],
    name: "fetchSignedBatchVAAFromLogs",
    outputs: [
      {
        internalType: "bytes",
        name: "signedMessage",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32[]",
            name: "topics",
            type: "bytes32[]",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "emitter",
            type: "address",
          },
        ],
        internalType: "struct VmSafe.Log",
        name: "log",
        type: "tuple",
      },
      {
        internalType: "uint16",
        name: "emitterChainId",
        type: "uint16",
      },
    ],
    name: "fetchSignedMessageFromLogs",
    outputs: [
      {
        internalType: "bytes",
        name: "signedMessage",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32[]",
            name: "topics",
            type: "bytes32[]",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "emitter",
            type: "address",
          },
        ],
        internalType: "struct VmSafe.Log[]",
        name: "logs",
        type: "tuple[]",
      },
      {
        internalType: "uint8",
        name: "numMessages",
        type: "uint8",
      },
    ],
    name: "fetchWormholeMessageFromLog",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32[]",
            name: "topics",
            type: "bytes32[]",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "emitter",
            type: "address",
          },
        ],
        internalType: "struct VmSafe.Log[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "setMessageFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vm",
    outputs: [
      {
        internalType: "contract Vm",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wormhole",
    outputs: [
      {
        internalType: "contract IWormhole",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620028173803806200281783398101604081905262000034916200065b565b600080546001600160a01b0319166001600160a01b03841617905560018190556040516001625e79b760e01b0319815260048101829052620000d490600080516020620027f78339815191529063ffa1864990602401602060405180830381865afa158015620000a8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000ce91906200068a565b620000dc565b5050620008ab565b604051630667f9d760e41b815230600482015260026024820152600090600080516020620027f78339815191529063667f9d7090604401602060405180830381865afa15801562000131573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001579190620006af565b905080156200019e5760405162461bcd60e51b815260206004820152600e60248201526d1a5b98dbdc9c9958dd081cdb1bdd60921b60448201526064015b60405180910390fd5b60008060009054906101000a90046001600160a01b03166001600160a01b0316631cfe79516040518163ffffffff1660e01b8152600401602060405180830381865afa158015620001f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002199190620006de565b6040805163ffffffff8316602082015260029181019190915290915060009060600160408051808303601f1901815290829052805160209091012060008054630667f9d760e41b84526001600160a01b031660048401526024830182905290925090600080516020620027f78339815191529063667f9d7090604401602060405180830381865afa158015620002b3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002d99190620006af565b905060015b81811015620003ad576000546040805160208082018790528251808303820181529183019092528051910120600080516020620027f7833981519152916370ca10bb916001600160a01b03909116906200033a908590620006fc565b60405160e084901b6001600160e01b03191681526001600160a01b039092166004830152602482015260006044820152606401600060405180830381600087803b1580156200038857600080fd5b505af11580156200039d573d6000803e3d6000fd5b50505050600181019050620002de565b50600080546040805160208082018790528251808303820181529183019092528051910120600080516020620027f7833981519152926370ca10bb926001600160a01b031691620003fe91620006fc565b60405160e084901b6001600160e01b03191681526001600160a01b03928316600482015260248101919091529088166044820152606401600060405180830381600087803b1580156200045057600080fd5b505af115801562000465573d6000803e3d6000fd5b50506000546040516370ca10bb60e01b81526001600160a01b0390911660048201526024810185905260016044820152600080516020620027f783398151915292506370ca10bb9150606401600060405180830381600087803b158015620004cc57600080fd5b505af1158015620004e1573d6000803e3d6000fd5b505060008054604051637ca8cbad60e11b815263ffffffff881660048201529193506001600160a01b0316915063f951975a90602401600060405180830381865afa15801562000535573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200055f919081019062000798565b518051909150600114620005b65760405162461bcd60e51b815260206004820152601560248201527f677561726469616e732e6c656e67746820213d20310000000000000000000000604482015260640162000195565b856001600160a01b031681600081518110620005d657620005d662000895565b60200260200101516001600160a01b031614620006365760405162461bcd60e51b815260206004820152601f60248201527f696e636f727265637420677561726469616e20736574206f7665727269646500604482015260640162000195565b505050505050565b80516001600160a01b03811681146200065657600080fd5b919050565b600080604083850312156200066f57600080fd5b6200067a836200063e565b9150602083015190509250929050565b6000602082840312156200069d57600080fd5b620006a8826200063e565b9392505050565b600060208284031215620006c257600080fd5b5051919050565b805163ffffffff811681146200065657600080fd5b600060208284031215620006f157600080fd5b620006a882620006c9565b808201808211156200071e57634e487b7160e01b600052601160045260246000fd5b92915050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156200075f576200075f62000724565b60405290565b604051601f8201601f191681016001600160401b038111828210171562000790576200079062000724565b604052919050565b60006020808385031215620007ac57600080fd5b82516001600160401b0380821115620007c457600080fd5b9084019060408287031215620007d957600080fd5b620007e36200073a565b825182811115620007f357600080fd5b8301601f810188136200080557600080fd5b8051838111156200081a576200081a62000724565b8060051b93506200082d86850162000765565b818152938201860193868101908a8611156200084857600080fd5b928701925b85841015620008715762000861846200063e565b825292870192908701906200084d565b84525062000884915050838501620006c9565b848201528094505050505092915050565b634e487b7160e01b600052603260045260246000fd5b611f3c80620008bb6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806364bb9bfb1161005b57806364bb9bfb1461011157806384acd1bb146101245780639ee7de7f14610137578063b34cd8601461015757600080fd5b80630e6452951461008d57806323aa2a9d146100b657806323ad78c8146100cb5780633a768463146100de575b600080fd5b6100a061009b3660046116a2565b61016a565b6040516100ad9190611816565b60405180910390f35b6100c96100c4366004611830565b610426565b005b6100a06100d93660046119b4565b610700565b6100f9737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020016100ad565b6100a061011f3660046116a2565b610d92565b6000546100f9906001600160a01b031681565b61014a610145366004611a26565b610de3565b6040516100ad9190611a77565b6100a0610165366004611b3a565b610f23565b6060600061017783610d92565b905061018281610f63565b610140840152604080516001808252818301909252600091816020015b60408051608081018252600080825260208083018290529282018190526060820152825260001990920191018161019f579050506001546101408601516040516338d07aa960e21b815260048101929092526024820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063e341eaa490604401606060405180830381865afa158015610235573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102599190611b80565b8360008151811061026c5761026c611bb7565b60200260200101516040018460008151811061028a5761028a611bb7565b6020026020010151600001856000815181106102a8576102a8611bb7565b602002602001015160200183815250838152508360ff1660ff168152505050506000816000815181106102dd576102dd611bb7565b60200260200101516060019060ff16908160ff1681525050836000015160008054906101000a90046001600160a01b03166001600160a01b0316631cfe79516040518163ffffffff1660e01b8152600401602060405180830381865afa15801561034b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036f9190611bcd565b82518360008261038157610381611bb7565b602002602001015160600151846000815181106103a0576103a0611bb7565b602002602001015160000151856000815181106103bf576103bf611bb7565b602002602001015160200151601b876000815181106103e0576103e0611bb7565b6020026020010151604001516103f69190611c00565b8860405160200161040e989796959493929190611c35565b60405160208183030381529060405292505050919050565b600063436f726560001b9050600081600360008054906101000a90046001600160a01b03166001600160a01b0316639a8a05926040518163ffffffff1660e01b8152600401602060405180830381865afa158015610488573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ac9190611cab565b856040516020016104f0949392919093845260f89290921b6001600160f81b031916602084015260f01b6001600160f01b0319166021830152602382015260430190565b60408051601f19818403018152610160830182526001835263ffffffff421660208481019190915260008484018190528054845163fbe3c2cd60e01b8152945193965090949360608501936001600160a01b039092169263fbe3c2cd926004808401938290030181865afa15801561056c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105909190611cab565b61ffff16815260200160008054906101000a90046001600160a01b03166001600160a01b031663b172b2226040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060e9190611cc8565b81526000602080830182905260c860408085019190915260608401879052608084018390528051838152918201905260a0909201919061067d565b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816106495790505b508152600060209091018190529091506106968261016a565b60005460405163f42bc64160e01b81529192506001600160a01b03169063f42bc641906106c7908490600401611816565b600060405180830381600087803b1580156106e157600080fd5b505af11580156106f5573d6000803e3d6000fd5b505050505050505050565b606060008086516001600160401b0381111561071e5761071e611437565b60405190808252806020026020018201604052801561075757816020015b6107446113dc565b81526020019060019003908161073c5790505b50905060005b87518110156108825761078888828151811061077b5761077b611bb7565b6020026020010151610f9c565b82828151811061079a5761079a611bb7565b6020026020010181905250428282815181106107b8576107b8611bb7565b60200260200101516020019063ffffffff16908163ffffffff1681525050858282815181106107e9576107e9611bb7565b60200260200101516060019061ffff16908161ffff1681525050846001600160a01b031660001b82828151811061082257610822611bb7565b602002602001015160800181815250508663ffffffff1682828151811061084b5761084b611bb7565b60200260200101516040015163ffffffff16036108705761086d600184611ce1565b92505b8061087a81611cfa565b91505061075d565b50606060008360ff166001600160401b038111156108a2576108a2611437565b6040519080825280602002602001820160405280156108cb578160200160208202803683370190505b5090506000805b8a51811015610a7b578963ffffffff168582815181106108f4576108f4611bb7565b60200260200101516040015163ffffffff1603610a6957600085828151811061091f5761091f611bb7565b60200260200101516020015186838151811061093d5761093d611bb7565b60200260200101516040015187848151811061095b5761095b611bb7565b60200260200101516060015188858151811061097957610979611bb7565b60200260200101516080015189868151811061099757610997611bb7565b602002602001015160a001518a87815181106109b5576109b5611bb7565b602002602001015160c001518b88815181106109d3576109d3611bb7565b602002602001015160e001516040516020016109f59796959493929190611d13565b6040516020818303038152906040529050610a0f81610f63565b848460ff1681518110610a2457610a24611bb7565b6020026020010181815250508483825183604051602001610a489493929190611d9a565b60405160208183030381529060405294508280610a6490611df6565b935050505b80610a7381611cfa565b9150506108d2565b506000610ae7600284604051602001610a949190611e48565b60405160208183030381529060405280519060200120604051602001610ad392919060f89290921b6001600160f81b0319168252600182015260210190565b604051602081830303815290604052610f63565b60408051600180825281830190925291925060009190816020015b604080516080810182526000808252602080830182905292820181905260608201528252600019909201910181610b025750506001546040516338d07aa960e21b8152600481019190915260248101849052909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063e341eaa490604401606060405180830381865afa158015610b93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb79190611b80565b83600081518110610bca57610bca611bb7565b602002602001015160400184600081518110610be857610be8611bb7565b602002602001015160000185600081518110610c0657610c06611bb7565b602002602001015160200183815250838152508360ff1660ff16815250505050600081600081518110610c3b57610c3b611bb7565b60200260200101516060019060ff16908160ff1681525050600260008054906101000a90046001600160a01b03166001600160a01b0316631cfe79516040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ca6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cca9190611bcd565b600183600081518110610cdf57610cdf611bb7565b60200260200101516060015184600081518110610cfe57610cfe611bb7565b60200260200101516000015185600081518110610d1d57610d1d611bb7565b602002602001015160200151601b87600081518110610d3e57610d3e611bb7565b602002602001015160400151610d549190611c00565b8d8b8f8e604051602001610d729b9a99989796959493929190611e54565b604051602081830303815290604052975050505050505050949350505050565b606081602001518260400151836060015184608001518560a001518660c001518760e00151604051602001610dcd9796959493929190611d13565b6040516020818303038152906040529050919050565b606060008260ff166001600160401b03811115610e0257610e02611437565b604051908082528060200260200182016040528015610e4f57816020015b60408051606080820183528082526020820152600091810191909152815260200190600190039081610e205790505b5090506000805b8551811015610f17577f6eb224fb001ed210e379b335e35efe88672a8ce935d981a6896b27ffdf52a3b2868281518110610e9257610e92611bb7565b602002602001015160000151600081518110610eb057610eb0611bb7565b602002602001015103610f0557858181518110610ecf57610ecf611bb7565b6020026020010151838360ff1681518110610eec57610eec611bb7565b6020908102919091010152610f02600183611ce1565b91505b80610f0f81611cfa565b915050610e56565b50909150505b92915050565b6060610f2d6113dc565b610f3684610f9c565b6001815263ffffffff4216602082015261ffff841660608201529050610f5b8161016a565b949350505050565b60008180519060200120604051602001610f7f91815260200190565b604051602081830303815290604052805190602001209050919050565b610fa46113dc565b60008260000151600181518110610fbd57610fbd611bb7565b6020026020010151826080018181525050610ff56008826020610fe09190611ee0565b610fea9190611ef3565b60208501519061115b565b6001600160401b031660a083015261100e602082611ee0565b90506110356004611020836020611ee0565b61102a9190611ef3565b6020850151906111b8565b63ffffffff16604083015261104b602082611ee0565b9050611058602082611ee0565b905061107f600161106a836020611ee0565b6110749190611ef3565b602085015190611215565b60ff1660c0830152611092602082611ee0565b905060006110ad82856020015161127190919063ffffffff16565b90506110ba602083611ee0565b60208501519092506110cd9083836112cf565b60e08401526110dc8183611ee0565b9150818460200151516110ef9190611ef3565b6110f99083611ee0565b915083602001515182146111545760405162461bcd60e51b815260206004820181905260248201527f6661696c656420746f20706172736520776f726d686f6c65206d65737361676560448201526064015b60405180910390fd5b5050919050565b6000611168826008611ee0565b835110156111af5760405162461bcd60e51b8152602060048201526014602482015273746f55696e7436345f6f75744f66426f756e647360601b604482015260640161114b565b50016008015190565b60006111c5826004611ee0565b8351101561120c5760405162461bcd60e51b8152602060048201526014602482015273746f55696e7433325f6f75744f66426f756e647360601b604482015260640161114b565b50016004015190565b6000611222826001611ee0565b835110156112685760405162461bcd60e51b8152602060048201526013602482015272746f55696e74385f6f75744f66426f756e647360681b604482015260640161114b565b50016001015190565b600061127e826020611ee0565b835110156112c65760405162461bcd60e51b8152602060048201526015602482015274746f55696e743235365f6f75744f66426f756e647360581b604482015260640161114b565b50016020015190565b6060816112dd81601f611ee0565b101561131c5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b604482015260640161114b565b6113268284611ee0565b8451101561136a5760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b604482015260640161114b565b60608215801561138957604051915060008252602082016040526113d3565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156113c25780518352602092830192016113aa565b5050858452601f01601f1916604052505b50949350505050565b604080516101608101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e08201819052610100820183905261012082015261014081019190915290565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b038111828210171561146f5761146f611437565b60405290565b60405161016081016001600160401b038111828210171561146f5761146f611437565b604051606081016001600160401b038111828210171561146f5761146f611437565b604051601f8201601f191681016001600160401b03811182821017156114e2576114e2611437565b604052919050565b60ff811681146114f957600080fd5b50565b8035611507816114ea565b919050565b63ffffffff811681146114f957600080fd5b80356115078161150c565b61ffff811681146114f957600080fd5b803561150781611529565b80356001600160401b038116811461150757600080fd5b600082601f83011261156c57600080fd5b81356001600160401b0381111561158557611585611437565b611598601f8201601f19166020016114ba565b8181528460208386010111156115ad57600080fd5b816020850160208301376000918101602001919091529392505050565b60006001600160401b038211156115e3576115e3611437565b5060051b60200190565b600082601f8301126115fe57600080fd5b8135602061161361160e836115ca565b6114ba565b82815260079290921b8401810191818101908684111561163257600080fd5b8286015b84811015611697576080818903121561164f5760008081fd5b61165761144d565b813581528482013585820152604080830135611672816114ea565b90820152606082810135611685816114ea565b90820152835291830191608001611636565b509695505050505050565b6000602082840312156116b457600080fd5b81356001600160401b03808211156116cb57600080fd5b9083019061016082860312156116e057600080fd5b6116e8611475565b6116f1836114fc565b81526116ff6020840161151e565b60208201526117106040840161151e565b604082015261172160608401611539565b60608201526080830135608082015261173c60a08401611544565b60a082015261174d60c084016114fc565b60c082015260e08301358281111561176457600080fd5b6117708782860161155b565b60e08301525061010061178481850161151e565b90820152610120838101358381111561179c57600080fd5b6117a8888287016115ed565b91830191909152506101409283013592810192909252509392505050565b60005b838110156117e15781810151838201526020016117c9565b50506000910152565b600081518084526118028160208601602086016117c6565b601f01601f19169290920160200192915050565b60208152600061182960208301846117ea565b9392505050565b60006020828403121561184257600080fd5b5035919050565b80356001600160a01b038116811461150757600080fd5b60006060828403121561187257600080fd5b61187a611498565b905081356001600160401b038082111561189357600080fd5b818401915084601f8301126118a757600080fd5b813560206118b761160e836115ca565b82815260059290921b840181019181810190888411156118d657600080fd5b948201945b838610156118f4578535825294820194908201906118db565b8652508581013593508284111561190a57600080fd5b6119168785880161155b565b818601525050505061192a60408301611849565b604082015292915050565b600082601f83011261194657600080fd5b8135602061195661160e836115ca565b82815260059290921b8401810191818101908684111561197557600080fd5b8286015b848110156116975780356001600160401b038111156119985760008081fd5b6119a68986838b0101611860565b845250918301918301611979565b600080600080608085870312156119ca57600080fd5b84356001600160401b038111156119e057600080fd5b6119ec87828801611935565b94505060208501356119fd8161150c565b92506040850135611a0d81611529565b9150611a1b60608601611849565b905092959194509250565b60008060408385031215611a3957600080fd5b82356001600160401b03811115611a4f57600080fd5b611a5b85828601611935565b9250506020830135611a6c816114ea565b809150509250929050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015611b2b57898403603f19018652825180516060808752815190870181905260808701918b019085905b80821015611aec5782518452928c0192918c019160019190910190611acc565b505050898201518682038b880152611b0482826117ea565b928a01516001600160a01b0316968a01969096525095880195935091870191600101611a9f565b50919998505050505050505050565b60008060408385031215611b4d57600080fd5b82356001600160401b03811115611b6357600080fd5b611b6f85828601611860565b9250506020830135611a6c81611529565b600080600060608486031215611b9557600080fd5b8351611ba0816114ea565b602085015160409095015190969495509392505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611bdf57600080fd5b81516118298161150c565b634e487b7160e01b600052601160045260246000fd5b60ff8281168282160390811115610f1d57610f1d611bea565b60008151611c2b8185602086016117c6565b9290920192915050565b600060ff60f81b808b60f81b16835263ffffffff60e01b8a60e01b166001840152808960f81b166005840152808860f81b166006840152866007840152856027840152808560f81b166047840152508251611c978160488501602087016117c6565b919091016048019998505050505050505050565b600060208284031215611cbd57600080fd5b815161182981611529565b600060208284031215611cda57600080fd5b5051919050565b60ff8181168382160190811115610f1d57610f1d611bea565b600060018201611d0c57611d0c611bea565b5060010190565b6001600160e01b031960e089811b8216835288901b1660048201526001600160f01b031960f087901b166008820152600a81018590526001600160c01b031960c085901b16602a8201526001600160f81b031960f884901b1660328201528151600090611d878160338501602087016117c6565b9190910160330198975050505050505050565b60008551611dac818460208a016117c6565b60f886901b6001600160f81b03191690830190815260e085901b6001600160e01b03191660018201528351611de88160058401602088016117c6565b016005019695505050505050565b600060ff821660ff8103611e0c57611e0c611bea565b60010192915050565b60008151602080840160005b83811015611e3d57815187529582019590820190600101611e21565b509495945050505050565b60006118298284611e15565b600060ff60f81b60f8818f821b16845263ffffffff60e01b8e60e01b166001850152818d821b166005850152818c821b1660068501528a60078501528960278501528189821b1660478501528188821b166048850152611eb76049850188611e15565b8287831b168152611ecb6001820187611c19565b93505050509c9b505050505050505050505050565b80820180821115610f1d57610f1d611bea565b81810381811115610f1d57610f1d611bea56fea264697066735822122033b54f43ca63d43251465efbc9f2343d51bca98348ae45006f4d2418f9e6a31864736f6c634300081300330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d";

type WormholeSimulatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WormholeSimulatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WormholeSimulator__factory extends ContractFactory {
  constructor(...args: WormholeSimulatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    wormhole_: string,
    devnetGuardian: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<WormholeSimulator> {
    return super.deploy(
      wormhole_,
      devnetGuardian,
      overrides || {}
    ) as Promise<WormholeSimulator>;
  }
  override getDeployTransaction(
    wormhole_: string,
    devnetGuardian: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      wormhole_,
      devnetGuardian,
      overrides || {}
    );
  }
  override attach(address: string): WormholeSimulator {
    return super.attach(address) as WormholeSimulator;
  }
  override connect(signer: Signer): WormholeSimulator__factory {
    return super.connect(signer) as WormholeSimulator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WormholeSimulatorInterface {
    return new utils.Interface(_abi) as WormholeSimulatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WormholeSimulator {
    return new Contract(address, _abi, signerOrProvider) as WormholeSimulator;
  }
}
