/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  HelloWormholeScript,
  HelloWormholeScriptInterface,
} from "../../HelloWormhole.s.sol/HelloWormholeScript";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "Deployed",
    type: "event",
  },
  {
    inputs: [],
    name: "IS_SCRIPT",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "run",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260048054600160ff199182168117909255600c8054909116909117905534801561002d57600080fd5b50610f6e8061003d6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630a9254e414610046578063c040622614610048578063f8ccbf4714610050575b600080fd5b005b610046610071565b600c5461005d9060ff1681565b604051901515815260200160405180910390f35b60405163c1978d1f60e01b815260206004820152600b60248201526a505249564154455f4b455960a81b6044820152600090737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c1978d1f90606401602060405180830381865afa1580156100df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101039190610308565b60405163350d56bf60e01b815260206004820152601060248201526f2ba7a926a427a622afa922a620aca2a960811b6044820152909150600090737109709ecfa91a80626ff3989d68f67f5b1dd12d9063350d56bf90606401602060405180830381865afa158015610179573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019d9190610321565b60405163ce817d4760e01b815260048101849052909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ce817d4790602401600060405180830381600087803b1580156101ed57600080fd5b505af1158015610201573d6000803e3d6000fd5b50505050600081604051610214906102fb565b6001600160a01b039091168152602001604051809103906000f080158015610240573d6000803e3d6000fd5b506040516001600160a01b03821681529091507ff40fcec21964ffb566044d083b4073f29f7f7929110ea19e1b3ebe375d89055e9060200160405180910390a17f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166376eadd366040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156102de57600080fd5b505af11580156102f2573d6000803e3d6000fd5b50505050505050565b610be78061035283390190565b60006020828403121561031a57600080fd5b5051919050565b60006020828403121561033357600080fd5b81516001600160a01b038116811461034a57600080fd5b939250505056fe60a060405234801561001057600080fd5b50604051610be7380380610be783398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051610b4861009f6000396000818160bc015281816101f4015281816102c001526103370152610b486000f3fe60806040526004361061004a5760003560e01c8063529dca321461004f57806365c4459814610064578063bd9c52d914610097578063da25b725146100aa578063f87c9ea9146100f6575b600080fd5b61006261005d366004610648565b610123565b005b34801561007057600080fd5b5061008461007f366004610751565b6101c6565b6040519081526020015b60405180910390f35b6100626100a536600461076c565b61026e565b3480156100b657600080fd5b506100de7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161008e565b34801561010257600080fd5b506101166101113660046107ec565b610485565b60405161008e9190610855565b600061012e84610531565b90506000868060200190518101906101469190610868565b90507f5c4ab0cfb98525b63324629eb8c98352dec2bece203410170311b7840505467681858460405161017b939291906108df565b60405180910390a1600080546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563016101bc828261099b565b5050505050505050565b60405163c23ee3c360e01b815261ffff8216600482015260006024820181905261c3506044830181905290917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c23ee3c3906064016040805180830381865afa158015610242573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102669190610a5b565b509392505050565b6000816040516020016102819190610855565b60408051808303601f190181529082905263c23ee3c360e01b825261ffff8616600483015260006024830181905261c3506044840181905291935090917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c23ee3c3906064016040805180830381865afa15801561030e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103329190610a5b565b5090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638fecdd02828888876000886040518763ffffffff1660e01b815260040161038b959493929190610a7f565b60206040518083038185885af11580156103a9573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906103ce9190610ac1565b508034111561047d576000336103e48334610aeb565b604051600081818185875af1925050503d8060008114610420576040519150601f19603f3d011682016040523d82523d6000602084013e610425565b606091505b505090508061047b5760405162461bcd60e51b815260206004820152601d60248201527f52657475726e696e67206578636573732066756e6473206661696c656400000060448201526064015b60405180910390fd5b505b505050505050565b6000818154811061049557600080fd5b9060005260206000200160009150905080546104b090610916565b80601f01602080910402602001604051908101604052809291908181526020018280546104dc90610916565b80156105295780601f106104fe57610100808354040283529160200191610529565b820191906000526020600020905b81548152906001019060200180831161050c57829003601f168201915b505050505081565b600060a082901c156105595760405163033b960d60e41b815260048101839052602401610472565b5090565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561059c5761059c61055d565b604052919050565b600067ffffffffffffffff8211156105be576105be61055d565b50601f01601f191660200190565b60006105df6105da846105a4565b610573565b90508281528383830111156105f357600080fd5b828260208301376000602084830101529392505050565b600082601f83011261061b57600080fd5b61062a838335602085016105cc565b9392505050565b803561ffff8116811461064357600080fd5b919050565b600080600080600060a0868803121561066057600080fd5b853567ffffffffffffffff8082111561067857600080fd5b61068489838a0161060a565b965060209150818801358181111561069b57600080fd5b8801601f81018a136106ac57600080fd5b8035828111156106be576106be61055d565b8060051b6106cd858201610573565b918252828101850191858101908d8411156106e757600080fd5b86850192505b83831015610723578235868111156107055760008081fd5b6107138f898389010161060a565b83525091860191908601906106ed565b809a50505050505050506040860135925061074060608701610631565b949793965091946080013592915050565b60006020828403121561076357600080fd5b61062a82610631565b60008060006060848603121561078157600080fd5b61078a84610631565b925060208401356001600160a01b03811681146107a657600080fd5b9150604084013567ffffffffffffffff8111156107c257600080fd5b8401601f810186136107d357600080fd5b6107e2868235602084016105cc565b9150509250925092565b6000602082840312156107fe57600080fd5b5035919050565b60005b83811015610820578181015183820152602001610808565b50506000910152565b60008151808452610841816020860160208601610805565b601f01601f19169290920160200192915050565b60208152600061062a6020830184610829565b60006020828403121561087a57600080fd5b815167ffffffffffffffff81111561089157600080fd5b8201601f810184136108a257600080fd5b80516108b06105da826105a4565b8181528560208385010111156108c557600080fd5b6108d6826020830160208601610805565b95945050505050565b6060815260006108f26060830186610829565b61ffff949094166020830152506001600160a01b0391909116604090910152919050565b600181811c9082168061092a57607f821691505b60208210810361094a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561099657600081815260208120601f850160051c810160208610156109775750805b601f850160051c820191505b8181101561047d57828155600101610983565b505050565b815167ffffffffffffffff8111156109b5576109b561055d565b6109c9816109c38454610916565b84610950565b602080601f8311600181146109fe57600084156109e65750858301515b600019600386901b1c1916600185901b17855561047d565b600085815260208120601f198616915b82811015610a2d57888601518255948401946001909101908401610a0e565b5085821015610a4b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008060408385031215610a6e57600080fd5b505080516020909101519092909150565b61ffff861681526001600160a01b038516602082015260a060408201819052600090610aad90830186610829565b606083019490945250608001529392505050565b600060208284031215610ad357600080fd5b815167ffffffffffffffff8116811461062a57600080fd5b81810381811115610b0c57634e487b7160e01b600052601160045260246000fd5b9291505056fea2646970667358221220a4f78938d7a0326a64b0b2be2bb16072048c2862ef80af126682ee0b6ae8cc8164736f6c63430008130033a264697066735822122047e15ddc45d69f5c766e48c7a5594eca2dde3df9df60091d11d36c7d11bacd4e64736f6c63430008130033";

type HelloWormholeScriptConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HelloWormholeScriptConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HelloWormholeScript__factory extends ContractFactory {
  constructor(...args: HelloWormholeScriptConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<HelloWormholeScript> {
    return super.deploy(overrides || {}) as Promise<HelloWormholeScript>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HelloWormholeScript {
    return super.attach(address) as HelloWormholeScript;
  }
  override connect(signer: Signer): HelloWormholeScript__factory {
    return super.connect(signer) as HelloWormholeScript__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HelloWormholeScriptInterface {
    return new utils.Interface(_abi) as HelloWormholeScriptInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HelloWormholeScript {
    return new Contract(address, _abi, signerOrProvider) as HelloWormholeScript;
  }
}
